{"version":3,"sources":["components/Buttons.js","components/Box.js","components/Grid.js","components/App.js","index.js"],"names":["Container","styled","div","Buttons","playButton","pauseButton","clear","slow","fast","seed","gridSize","ButtonGroup","variant","color","Button","onClick","DropdownButton","title","id","onSelect","e","Dropdown","Item","eventKey","Box","boxClass","boxId","selectBox","row","col","className","Grid","cols","rows","gridFull","width","rowsArr","i","y","push","key","style","App","props","gridCopy","arrayClone","state","setState","j","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","this","Component","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7e5ebb3.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nconst Container = styled.div`\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst Buttons = ({\n  playButton,\n  pauseButton,\n  clear,\n  slow,\n  fast,\n  seed,\n  gridSize,\n}) => {\n  const handleSelect = (e) => gridSize(e);\n\n  return (\n    <Container>\n      <ButtonGroup variant=\"contained\" color=\"default\">\n        <Button onClick={playButton}>Play</Button>\n        <Button onClick={pauseButton}>Pause</Button>\n        <Button onClick={clear}>Clear</Button>\n        <Button onClick={slow}>Slow</Button>\n        <Button onClick={fast}>Fast</Button>\n        <Button onClick={seed}>Seed</Button>\n      </ButtonGroup>\n      <DropdownButton title=\"Grid Size\" id=\"size-menu\" onSelect={handleSelect}>\n        <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">70x50</Dropdown.Item>\n      </DropdownButton>\n    </Container>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  display: inline-block;\n  border: 1px solid black;\n  width: 15px;\n  height: 15px;\n  margin-left: -1px;\n  margin-bottom: -1px;\n\n  &:hover {\n    background: #0cf;\n  }\n`;\n\nexport default ({ boxClass, boxId, selectBox, row, col }) => {\n  const selBox = () => selectBox(row, col);\n\n  return <Box className={boxClass} id={boxId} onClick={selBox} />;\n};\n","import React from \"react\";\nimport Box from \"./Box\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 150px;\n  line-height: 0;\n  margin: 20px auto auto auto;\n  box-shadow: 0 0 20px white;\n`;\n\nconst Grid = ({ cols, rows, gridFull, selectBox }) => {\n  const width = cols * 14;\n\n  const rowsArr = [];\n\n  for (let i = 0; i < rows; i += 1) {\n    for (let y = 0; y < cols; y += 1) {\n      const boxId = `${i}_${y}`;\n\n      rowsArr.push(\n        <Box\n          boxClass={gridFull[i][y] ? \"on\" : \"off\"}\n          key={boxId}\n          boxId={boxId}\n          row={i}\n          col={y}\n          selectBox={selectBox}\n        />\n      );\n    }\n  }\n\n  return <Container style={{ width: width }}>{rowsArr}</Container>;\n};\n\nexport default Grid;\n","import React, { Component } from \"react\";\n\nimport Buttons from \"./Buttons\";\nimport Grid from \"./Grid\";\n\nimport \"../index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.speed = 100;\n    this.cols = 50;\n    this.rows = 30;\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false)),\n    };\n  }\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  seed = () => {\n    const gridCopy = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  slow = () => {\n    this.speed = 1000;\n    this.playButton();\n  };\n\n  fast = () => {\n    this.speed = 100;\n    this.playButton();\n  };\n\n  clear = () => {\n    const grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n\n    this.setState({ gridFull: grid, generation: 0 });\n  };\n\n  gridSize = (size) => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n        break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n        break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n    }\n\n    this.clear();\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && j < this.cols - 1)\n          if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>The Game of Life</h1>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generations: {this.state.generation}</h2>\n      </div>\n    );\n  }\n}\n\nconst arrayClone = (arr) => JSON.parse(JSON.stringify(arr));\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}