{"version":3,"sources":["components/Buttons.js","components/Box.js","components/Grid.js","uikit/Title.js","utils/array-clone.js","components/App.js","actions/index.js","reducers/index.js","reducers/speedReducer.js","reducers/generationReducer.js","index.js"],"names":["Container","styled","div","Buttons","playButton","pauseButton","clear","slow","fast","seed","gridSize","ButtonGroup","variant","color","Button","onClick","DropdownButton","title","id","onSelect","e","Dropdown","Item","eventKey","Box","boxClass","boxId","selectBox","row","col","className","Grid","cols","rows","gridFull","width","rowsArr","i","y","push","key","style","Title","h1","arrayClone","arr","JSON","parse","stringify","App","props","gridCopy","state","setState","j","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","updateSpeed","grid","Array","fill","map","updateGeneration","size","g","g2","count","generation","this","as","Component","connect","type","payload","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0c68d64.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nconst Container = styled.div`\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst Buttons = ({\n  playButton,\n  pauseButton,\n  clear,\n  slow,\n  fast,\n  seed,\n  gridSize,\n}) => {\n  const handleSelect = (e) => gridSize(e);\n\n  return (\n    <Container>\n      <ButtonGroup variant=\"contained\" color=\"default\">\n        <Button onClick={playButton}>Play</Button>\n        <Button onClick={pauseButton}>Pause</Button>\n        <Button onClick={clear}>Clear</Button>\n        <Button onClick={slow}>Slow</Button>\n        <Button onClick={fast}>Fast</Button>\n        <Button onClick={seed}>Seed</Button>\n      </ButtonGroup>\n      <DropdownButton title=\"Grid Size\" id=\"size-menu\" onSelect={handleSelect}>\n        <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">70x50</Dropdown.Item>\n      </DropdownButton>\n    </Container>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  display: inline-block;\n  border: 1px solid black;\n  width: 15px;\n  height: 15px;\n  margin-left: -1px;\n  margin-bottom: -1px;\n\n  &:hover {\n    background: #0cf;\n  }\n`;\n\nexport default ({ boxClass, boxId, selectBox, row, col }) => {\n  const selBox = () => selectBox(row, col);\n\n  return <Box className={boxClass} id={boxId} onClick={selBox} />;\n};\n","import React from \"react\";\nimport Box from \"./Box\";\n\nimport styled from \"styled-components\";\n\nimport \"../index.css\";\n\nconst Container = styled.div`\n  width: 150px;\n  line-height: 0;\n  margin: 20px auto auto auto;\n  box-shadow: 0 0 20px white;\n`;\n\nconst Grid = ({ cols, rows, gridFull, selectBox }) => {\n  const width = cols * 14;\n\n  const rowsArr = [];\n\n  for (let i = 0; i < rows; i += 1) {\n    for (let y = 0; y < cols; y += 1) {\n      const boxId = `${i}_${y}`;\n\n      rowsArr.push(\n        <Box\n          boxClass={gridFull[i][y] ? \"on\" : \"off\"}\n          key={boxId}\n          boxId={boxId}\n          row={i}\n          col={y}\n          selectBox={selectBox}\n        />\n      );\n    }\n  }\n\n  return <Container style={{ width: width }}>{rowsArr}</Container>;\n};\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nconst Title = styled.h1`\n  color: white;\n  margin: auto;\n  text-align: center;\n  width: 50%;\n  margin-top: 10px;\n`;\n\nexport default Title;\n","const arrayClone = (arr) => JSON.parse(JSON.stringify(arr));\n\nexport default arrayClone;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport { updateSpeed, updateGeneration } from \"../actions\";\n\nimport Buttons from \"./Buttons\";\nimport Grid from \"./Grid\";\nimport Title from \"../uikit/Title\";\n\nimport arrayClone from \"../utils/array-clone\";\n\nconst Container = styled.div`\n  background-image: url(http://subtlepatterns2015.subtlepatterns.netdna-cdn.com/patterns/squares.png);\n  min-height: 100vh;\n  max-height: 100%;\n  padding-top: 1px;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.cols = 50;\n    this.rows = 30;\n\n    this.state = {\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false)),\n    };\n  }\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  seed = () => {\n    const gridCopy = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n\n    this.intervalId = setInterval(this.play, this.props.speed);\n  };\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  slow = () => {\n    this.props.updateSpeed(1000);\n\n    this.playButton();\n  };\n\n  fast = () => {\n    this.props.updateSpeed(100);\n\n    this.playButton();\n  };\n\n  clear = () => {\n    const grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n\n    this.props.updateGeneration(0);\n\n    this.setState({ gridFull: grid });\n  };\n\n  gridSize = (size) => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n        break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n        break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n    }\n\n    this.clear();\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && j < this.cols - 1)\n          if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.props.updateGeneration(this.props.generation + 1);\n\n    this.setState({\n      gridFull: g2,\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Title as=\"h1\">The Game of Life</Title>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <Title as=\"h2\">Generations: {this.props.generation}</Title>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  speed: state.speed,\n  generation: state.generation,\n});\n\nexport default connect(mapStateToProps, { updateSpeed, updateGeneration })(App);\n","export const updateSpeed = (speed) => {\n  return {\n    type: \"UPDATE_SPEED\",\n    payload: speed,\n  };\n};\n\nexport const updateGeneration = (generation) => {\n  return {\n    type: \"UPDATE_GENERATION\",\n    payload: generation,\n  };\n};\n","import { combineReducers } from \"redux\";\n\nimport speedReducer from \"./speedReducer\";\nimport generationReducer from \"./generationReducer\";\n\nexport default combineReducers({\n  speed: speedReducer,\n  generation: generationReducer,\n});\n","export default (state = 100, action) => {\n  switch (action.type) {\n    case \"UPDATE_SPEED\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = 0, action) => {\n  switch (action.type) {\n    case \"UPDATE_GENERATION\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}